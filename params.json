{"name":"jaxrs-filter-jsend","tagline":"JAX-RX Filter Jsend","body":"JAX-RX Filter Jsend\r\n===================\r\n\r\nJAX-RX Filter to support a modified [Jsend](http://labs.omniti.com/labs/jsend) body wrapper through a `@Jsend` annotation\r\n\r\nCheckout last version [here](https://bintray.com/guestful/maven/guestful.module.jaxrs-filter-jsend/view)\r\n\r\n[![Build Status](https://drone.io/github.com/guestful/module.jaxrs-filter-jsend/status.png)](https://drone.io/github.com/guestful/module.jaxrs-filter-jsend/latest)\r\n\r\nSetup\r\n-----\r\n\r\nAdd in your POM:\r\n\r\n```\r\n<repositories>\r\n    <repository>\r\n        <id>bintray</id>\r\n        <url>http://dl.bintray.com/guestful/maven</url>\r\n    </repository>\r\n</repositories>\r\n```\r\n\r\nand\r\n\r\n```\r\n<dependency>\r\n    <groupId>com.guestful.module</groupId>\r\n    <artifactId>guestful.module.jaxrs-filter-jsend</artifactId>\r\n    <version>?</version>\r\n</dependency>\r\n```\r\n\r\nIn your resouce config:\r\n\r\n```\r\nregisterClasses(JSendFeature)\r\n```\r\n\r\nIn your resources, add `@Jsend` annotation like this.\r\n\r\n```\r\n@GET\r\n@Path(\"version\")\r\n@Produces(\"application/json; charset=utf-8\")\r\n@Jsend\r\nMap getVersion() {\r\n    return [\r\n        version: Env.VERSION\r\n    ]\r\n}\r\n```\r\n\r\nResponses & Errors\r\n------------------\r\n\r\nAll responses will look roughly like this:\r\n\r\n```\r\n{\r\n    \"meta\": {\r\n        \"status\": 200\r\n    },\r\n    \"error\": {\r\n        \"type\": \"<type>\",\r\n        \"data\": {...},\r\n        \"message\": \"an optional string\"\r\n    },\r\n    \"data\": {...}\r\n}\r\n```\r\n\r\n - __data__: JSON response, if any\r\n - __meta__: Meta information about the request and response\r\n   - __status__: HTTP sattus code. In JSONP, the HTTP status code will always be 200 and `status` will hold the real HTTP status code value\r\n - __error__: Error section if error:\r\n   - __type__: error type (see below)\r\n   - __data__: error details, optional. I.e., for Bad Requests, contains validation errors.\r\n   - __message__: optional message describing the error. I.e. in case of Internal 500 error, this field could be set.\r\n\r\nHere is a list of error `type` and its matching `status` code:\r\n\r\n - status: `401`, type: __authc__: Authentication error.\r\n - status: `403`, type: __authz__: Although authentication succeeded, the acting user is not allowed to see this information due to privacy restrictions.\r\n - status: `400`, type: __request__: A required parameter was missing or a parameter was malformed. This is also used if the resource ID in the path is incorrect. Also case where no Access Token is provided.\r\n - status: `404`, type: __notfound__: The requested path does not exist.\r\n - status: `405`, type: __method__: The method (GET, PUT, POST, DELETE) set for the request is not allowed for the requested path..\r\n - status: `200`, type: __deprecated__: Something about this request is using deprecated functionality, or the response format may be about to change.\r\n - status: `500`, type: __server__: Server is currently experiencing issues. Check [status.guestful.com](http://status.guestful.com) for updates.\r\n - status: `???`, type: __other__: For any other status code, the type will be other\r\n\r\nIn case of a `BAD REQUEST`, the response will look like this:\r\n\r\n```\r\n{\r\n    \"meta\": {\r\n        \"status\": 400\r\n    },\r\n    \"error\": {\r\n        \"type\": \"request\",\r\n        \"data\": [ {\"key\": \"firstName\", \"type\": \"required\"}, {\"key\": \"lastName\", \"type\": \"invalid\"} ],\r\n    }\r\n}\r\n```\r\n","google":"UA-55953377-1","note":"Don't delete this file! It's used internally to help with page regeneration."}